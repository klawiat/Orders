// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Oredrs.Infrastructure;

#nullable disable

namespace Oredrs.Infrastructure.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20230425175820_InitializeMigration")]
    partial class InitializeMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Oreders.Domain.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 4, 25, 17, 58, 20, 426, DateTimeKind.Utc).AddTicks(5880));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Oreders");
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0dc7ca6-78d4-423a-bd55-457f566f8b5c"),
                            IsDeleted = false,
                            Name = "RandomName"
                        },
                        new
                        {
                            Id = new Guid("cfe7b970-91ad-4ed7-896d-bedf6f70f42c"),
                            IsDeleted = false,
                            Name = "RandomName1"
                        },
                        new
                        {
                            Id = new Guid("205bf706-f81f-414b-864a-fa2de132a3a8"),
                            IsDeleted = false,
                            Name = "RandomName2"
                        });
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Relation", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Relation", b =>
                {
                    b.HasOne("Oreders.Domain.Entity.Order", "Order")
                        .WithMany("Relations")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oreders.Domain.Entity.Product", "Product")
                        .WithMany("Relations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Order", b =>
                {
                    b.Navigation("Relations");
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Product", b =>
                {
                    b.Navigation("Relations");
                });
#pragma warning restore 612, 618
        }
    }
}
