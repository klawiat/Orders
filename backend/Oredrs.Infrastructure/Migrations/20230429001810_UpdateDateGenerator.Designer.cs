// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Oredrs.Infrastructure;

#nullable disable

namespace Oredrs.Infrastructure.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20230429001810_UpdateDateGenerator")]
    partial class UpdateDateGenerator
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Oreders.Domain.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Oreders");
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b90d4802-daed-470e-af58-d2489b54b6a3"),
                            IsDeleted = false,
                            Name = "Ложки"
                        },
                        new
                        {
                            Id = new Guid("864187cd-7b34-4be3-97b2-a559d9758dd7"),
                            IsDeleted = false,
                            Name = "Вилки"
                        },
                        new
                        {
                            Id = new Guid("cda1fe8d-3eee-477e-85d8-1695b77b187d"),
                            IsDeleted = false,
                            Name = "Ножи"
                        });
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Relation", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Relation", b =>
                {
                    b.HasOne("Oreders.Domain.Entity.Order", "Order")
                        .WithMany("Relations")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oreders.Domain.Entity.Product", "Product")
                        .WithMany("Relations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Order", b =>
                {
                    b.Navigation("Relations");
                });

            modelBuilder.Entity("Oreders.Domain.Entity.Product", b =>
                {
                    b.Navigation("Relations");
                });
#pragma warning restore 612, 618
        }
    }
}
